name: Continuous integration

on:
  push:
    branches:
      - main
  pull_request:

env:
  RUST_BACKTRACE: full
  RUSTC_WRAPPER: sccache
  SCCACHE_CACHE_SIZE: 2G
  SCCACHE_DIR: /home/runner/.cache/sccache

jobs:
  test:
    name: fmt + clippy + build + test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Set up sccache cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ${{ env.SCCACHE_DIR }}
          key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-sccache-

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install sccache (ubuntu-latest)
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: v0.3.0
        run: ./ci/install_sccache_linux.sh

      - name: Start sccache server
        run: ./ci/sccache_start_server.sh

      - name: Run fmt
        run: ./ci/cargo_fmt_check.sh

      - name: Run clippy
        run: ./ci/cargo_clippy.sh

      - name: Run build
        run: ./ci/cargo_build.sh

      - name: Start minio
        run: ./ci/minio_start.sh

      - name: Run tests
        run: ./ci/cargo_test.sh

      - name: Stop minio
        run: ./ci/minio_stop.sh

      - name: Print sccache stats
        run: ./ci/sccache_show_stats.sh

      - name: Stop sccache server
        run: ./ci/sccache_stop_server.sh






